[2024-05-20T06:23:29.918+0000] {taskinstance.py:1979} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: ETL_Flow.dim_mrr2stg scheduled__2024-05-18T21:11:00+00:00 [queued]>
[2024-05-20T06:23:29.945+0000] {taskinstance.py:1979} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: ETL_Flow.dim_mrr2stg scheduled__2024-05-18T21:11:00+00:00 [queued]>
[2024-05-20T06:23:29.946+0000] {taskinstance.py:2193} INFO - Starting attempt 1 of 6
[2024-05-20T06:23:29.985+0000] {taskinstance.py:2214} INFO - Executing <Task(PostgresOperator): dim_mrr2stg> on 2024-05-18 21:11:00+00:00
[2024-05-20T06:23:29.995+0000] {standard_task_runner.py:60} INFO - Started process 17554 to run task
[2024-05-20T06:23:30.001+0000] {standard_task_runner.py:87} INFO - Running: ['***', 'tasks', 'run', 'ETL_Flow', 'dim_mrr2stg', 'scheduled__2024-05-18T21:11:00+00:00', '--job-id', '3528', '--raw', '--subdir', 'DAGS_FOLDER/ETL.py', '--cfg-path', '/tmp/tmpdud0bxza']
[2024-05-20T06:23:30.007+0000] {standard_task_runner.py:88} INFO - Job 3528: Subtask dim_mrr2stg
[2024-05-20T06:23:30.116+0000] {task_command.py:423} INFO - Running <TaskInstance: ETL_Flow.dim_mrr2stg scheduled__2024-05-18T21:11:00+00:00 [running]> on host 518f7ecc027f
[2024-05-20T06:23:30.829+0000] {taskinstance.py:2510} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='coder2j' AIRFLOW_CTX_DAG_ID='ETL_Flow' AIRFLOW_CTX_TASK_ID='dim_mrr2stg' AIRFLOW_CTX_EXECUTION_DATE='2024-05-18T21:11:00+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2024-05-18T21:11:00+00:00'
[2024-05-20T06:23:30.831+0000] {sql.py:276} INFO - Executing: truncate table STG_Dim_Customers;
truncate table STG_Dim_Products;
truncate table STG_Dim_Dates;
truncate table STG_Dim_Time;

insert into STG_Dim_Products(Product_ID,Product_Name,Supplier,Category,Unit_Price,Unit_Cost,isValid)
select 
cast(Product_ID as integer),
case when Product_Name is null then 'missing' else Product_Name end,
case when Supplier similar to '[0-9]+' then cast(Supplier as integer) else 0 end,
case when Category similar to '[0-9]+' then cast(Category as integer) else 0 end,
case when Unit_Price similar to '[0-9]+(\.[0-9]+)?' and cast(Unit_Price as decimal(15,5))>=0
     then cast(Unit_Price as decimal(15,5)) else null end,
case when Unit_Cost similar to '[0-9]+(\.[0-9]+)?' and cast(Unit_Cost as decimal(15,5))>=0
     then cast(Unit_Cost as decimal(15,5)) else null end,
isValid
from MRR_Dim_Products
where isValid='valid';

insert into STG_Dim_Customers(Customer_ID,country,currency,exchange_to_USD,installation_date,media_source,isValid)
select
cast(Customer_ID as integer),
case when country is null then 'missing' else country end,
case when currency is null then 'missing' else currency end,
case when exchange_to_USD similar to '[0-9]+(\.[0-9]+)?' and cast(exchange_to_USD as decimal(3,2))>=0
     then cast(exchange_to_USD as decimal(3,2)) else null end,
case
    -- YYYY-MM-DD
    when installation_date ~ '^\d{4}-\d{2}-\d{2}$' then to_date(installation_date, 'YYYY-MM-DD')
    -- DD-MM-YYYY
    when installation_date ~ '^\d{2}-\d{2}-\d{4}$' then to_date(installation_date, 'DD-MM-YYYY')
    -- YYYY.MM.DD
    when installation_date ~ '^\d{4}.\d{2}.\d{2}$' then to_date(installation_date, 'YYYY.MM.DD')
    -- DD.MM.YYYY
    when installation_date ~ '^\d{2}.\d{2}.\d{4}$' then to_date(installation_date, 'DD.MM.YYYY')
    -- DD/MM/YYYY
    when installation_date ~ '^\d{2}/\d{2}/\d{4}$' then to_date(installation_date, 'DD/MM/YYYY')
    -- YYYY/MM/DD
    when installation_date ~ '^\d{4}/\d{2}/\d{2}$' then to_date(installation_date, 'YYYY/MM/DD')
    -- DD\MM\YYYY
    when installation_date ~ '^\d{2}\\d{2}\\d{4}$' then to_date(installation_date, 'DD\MM\YYYY')
    -- YYYY\MM\DD
    when installation_date ~ '^\d{4}\\d{2}\\d{2}$' then to_date(installation_date, 'YYYY\MM\DD')
    else '1900-01-01' end,
    media_source,
    isValid 
from MRR_Dim_Customers
where isValid='valid';


insert into STG_Dim_Dates(Date,Year,Quarter,Month,Day)
select
generate_series::date,
extract(year from generate_series),
extract(quarter from generate_series),
extract(month from generate_series),
extract(day from generate_series)
from generate_series('2024-01-01'::date, CURRENT_DATE + interval '12 days', interval '1 day');


INSERT INTO STG_Dim_Time(DateTime, Date, Hour, Minute)
SELECT
generate_series AS DateTime,
date_trunc('hour', generate_series) AS Date,
extract (HOUR FROM generate_series) AS Hour,
extract(MINUTE FROM generate_series) AS Minute
from
  generate_series('2024-01-01'::TIMESTAMP, CURRENT_DATE + INTERVAL '12 days', INTERVAL '1 minute');

[2024-05-20T06:23:30.856+0000] {base.py:83} INFO - Using connection ID 'postgres_localhost' for task execution.
[2024-05-20T06:23:30.879+0000] {base.py:83} INFO - Using connection ID 'postgres_localhost' for task execution.
[2024-05-20T06:23:30.907+0000] {sql.py:457} INFO - Running statement: truncate table STG_Dim_Customers;
truncate table STG_Dim_Products;
truncate table STG_Dim_Dates;
truncate table STG_Dim_Time;

insert into STG_Dim_Products(Product_ID,Product_Name,Supplier,Category,Unit_Price,Unit_Cost,isValid)
select 
cast(Product_ID as integer),
case when Product_Name is null then 'missing' else Product_Name end,
case when Supplier similar to '[0-9]+' then cast(Supplier as integer) else 0 end,
case when Category similar to '[0-9]+' then cast(Category as integer) else 0 end,
case when Unit_Price similar to '[0-9]+(\.[0-9]+)?' and cast(Unit_Price as decimal(15,5))>=0
     then cast(Unit_Price as decimal(15,5)) else null end,
case when Unit_Cost similar to '[0-9]+(\.[0-9]+)?' and cast(Unit_Cost as decimal(15,5))>=0
     then cast(Unit_Cost as decimal(15,5)) else null end,
isValid
from MRR_Dim_Products
where isValid='valid';

insert into STG_Dim_Customers(Customer_ID,country,currency,exchange_to_USD,installation_date,media_source,isValid)
select
cast(Customer_ID as integer),
case when country is null then 'missing' else country end,
case when currency is null then 'missing' else currency end,
case when exchange_to_USD similar to '[0-9]+(\.[0-9]+)?' and cast(exchange_to_USD as decimal(3,2))>=0
     then cast(exchange_to_USD as decimal(3,2)) else null end,
case
    -- YYYY-MM-DD
    when installation_date ~ '^\d{4}-\d{2}-\d{2}$' then to_date(installation_date, 'YYYY-MM-DD')
    -- DD-MM-YYYY
    when installation_date ~ '^\d{2}-\d{2}-\d{4}$' then to_date(installation_date, 'DD-MM-YYYY')
    -- YYYY.MM.DD
    when installation_date ~ '^\d{4}.\d{2}.\d{2}$' then to_date(installation_date, 'YYYY.MM.DD')
    -- DD.MM.YYYY
    when installation_date ~ '^\d{2}.\d{2}.\d{4}$' then to_date(installation_date, 'DD.MM.YYYY')
    -- DD/MM/YYYY
    when installation_date ~ '^\d{2}/\d{2}/\d{4}$' then to_date(installation_date, 'DD/MM/YYYY')
    -- YYYY/MM/DD
    when installation_date ~ '^\d{4}/\d{2}/\d{2}$' then to_date(installation_date, 'YYYY/MM/DD')
    -- DD\MM\YYYY
    when installation_date ~ '^\d{2}\\d{2}\\d{4}$' then to_date(installation_date, 'DD\MM\YYYY')
    -- YYYY\MM\DD
    when installation_date ~ '^\d{4}\\d{2}\\d{2}$' then to_date(installation_date, 'YYYY\MM\DD')
    else '1900-01-01' end,
    media_source,
    isValid 
from MRR_Dim_Customers
where isValid='valid';


insert into STG_Dim_Dates(Date,Year,Quarter,Month,Day)
select
generate_series::date,
extract(year from generate_series),
extract(quarter from generate_series),
extract(month from generate_series),
extract(day from generate_series)
from generate_series('2024-01-01'::date, CURRENT_DATE + interval '12 days', interval '1 day');


INSERT INTO STG_Dim_Time(DateTime, Date, Hour, Minute)
SELECT
generate_series AS DateTime,
date_trunc('hour', generate_series) AS Date,
extract (HOUR FROM generate_series) AS Hour,
extract(MINUTE FROM generate_series) AS Minute
from
  generate_series('2024-01-01'::TIMESTAMP, CURRENT_DATE + INTERVAL '12 days', INTERVAL '1 minute');
, parameters: None
[2024-05-20T06:25:16.326+0000] {job.py:213} ERROR - Job heartbeat got an exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 3371, in _wrap_pool_connect
    return fn()
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 327, in connect
    return _ConnectionFairy._checkout(self)
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 894, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 493, in checkout
    rec = pool._do_get()
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/pool/impl.py", line 256, in _do_get
    return self._create_connection()
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 273, in _create_connection
    return _ConnectionRecord(self)
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 388, in __init__
    self.__connect()
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 691, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    compat.raise_(
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 211, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 686, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/engine/create.py", line 574, in connect
    return dialect.connect(*cargs, **cparams)
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 598, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/home/airflow/.local/lib/python3.8/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: could not translate host name "postgres" to address: Temporary failure in name resolution


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/jobs/job.py", line 187, in heartbeat
    self._merge_from(Job._fetch_from_db(self, session))
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/api_internal/internal_api_call.py", line 114, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/jobs/job.py", line 308, in _fetch_from_db
    session.merge(job)
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 3056, in merge
    return self._merge(
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 3136, in _merge
    merged = self.get(
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 2853, in get
    return self._get_impl(
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 2975, in _get_impl
    return db_load_fn(
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/orm/loading.py", line 530, in load_on_pk_identity
    session.execute(
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/orm/session.py", line 750, in _connection_for_bind
    conn = bind.connect()
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/future/engine.py", line 412, in connect
    return super(Engine, self).connect()
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 3325, in connect
    return self._connection_cls(self, close_with_result=close_with_result)
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 96, in __init__
    else engine.raw_connection()
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 3404, in raw_connection
    return self._wrap_pool_connect(self.pool.connect, _connection)
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 3374, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2208, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 211, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 3371, in _wrap_pool_connect
    return fn()
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 327, in connect
    return _ConnectionFairy._checkout(self)
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 894, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 493, in checkout
    rec = pool._do_get()
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/pool/impl.py", line 256, in _do_get
    return self._create_connection()
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 273, in _create_connection
    return _ConnectionRecord(self)
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 388, in __init__
    self.__connect()
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 691, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    compat.raise_(
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 211, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 686, in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/engine/create.py", line 574, in connect
    return dialect.connect(*cargs, **cparams)
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 598, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/home/airflow/.local/lib/python3.8/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not translate host name "postgres" to address: Temporary failure in name resolution

(Background on this error at: https://sqlalche.me/e/14/e3q8)
[2024-05-20T06:25:16.459+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T06:25:34.658+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T06:25:57.760+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T06:28:35.195+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T06:28:54.957+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T06:32:00.925+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T06:32:20.256+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T06:32:36.817+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T06:35:16.854+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T06:35:39.077+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T06:38:44.423+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T06:38:59.499+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T06:40:12.765+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T06:40:32.362+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T06:41:15.795+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T06:41:41.694+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T06:42:05.417+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T06:44:42.989+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T06:44:58.113+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T06:48:26.422+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T06:50:32.874+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T06:50:56.346+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T06:51:14.713+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T06:53:58.566+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T06:54:21.096+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T06:54:41.405+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T06:57:03.218+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T06:57:37.024+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T06:59:14.697+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:01:43.759+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:02:24.616+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:02:44.415+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:03:18.719+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:03:34.771+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:05:57.416+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:07:04.451+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:08:13.219+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:10:30.163+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:10:49.100+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:11:14.431+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:14:02.638+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:14:18.368+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:14:42.654+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:17:09.159+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:17:32.480+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:17:54.427+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:20:32.091+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:21:00.724+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:21:34.675+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:24:17.904+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:24:37.161+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:25:03.344+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:28:19.301+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:31:50.087+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:32:05.612+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:35:08.289+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:36:09.208+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:42:49.004+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:46:00.546+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:46:19.293+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:46:38.054+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:47:28.561+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:47:43.647+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:50:30.884+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:51:02.974+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:51:41.334+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T07:55:29.160+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T08:02:10.298+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T08:05:52.185+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T08:07:48.076+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T08:08:43.077+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T08:12:00.394+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T08:12:26.880+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T08:14:41.305+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T08:14:59.416+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T08:15:14.918+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T08:15:35.219+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T08:18:28.434+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T08:18:43.550+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T08:19:36.692+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T08:21:33.819+0000] {job.py:221} ERROR - Job heartbeat failed with error. Scheduler is in unhealthy state
[2024-05-20T08:25:52.766+0000] {local_task_job_runner.py:211} ERROR - Heartbeat time limit exceeded!
[2024-05-20T08:26:35.087+0000] {process_utils.py:131} INFO - Sending 15 to group 17554. PIDs of all processes in the group: [17554]
[2024-05-20T08:26:39.899+0000] {process_utils.py:86} INFO - Sending the signal 15 to group 17554
[2024-05-20T08:27:49.342+0000] {process_utils.py:149} WARNING - process psutil.Process(pid=17554, name='airflow task ru', status='sleeping', started='06:23:29') did not respond to SIGTERM. Trying SIGKILL
[2024-05-20T08:27:49.653+0000] {process_utils.py:86} INFO - Sending the signal 9 to group 17554
[2024-05-20T08:27:49.731+0000] {process_utils.py:79} INFO - Process psutil.Process(pid=17554, name='airflow task ru', status='terminated', exitcode=<Negsignal.SIGKILL: -9>, started='06:23:29') (17554) terminated with exit code -9
[2024-05-20T08:27:49.757+0000] {standard_task_runner.py:175} ERROR - Job 3528 was killed before it finished (likely due to running out of memory)
