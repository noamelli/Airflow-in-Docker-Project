[2024-03-19T19:21:28.747+0000] {taskinstance.py:1979} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: ETL_Flow.dim_mrr2stg manual__2024-03-19T19:00:24.301139+00:00 [queued]>
[2024-03-19T19:21:28.763+0000] {taskinstance.py:1979} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: ETL_Flow.dim_mrr2stg manual__2024-03-19T19:00:24.301139+00:00 [queued]>
[2024-03-19T19:21:28.764+0000] {taskinstance.py:2193} INFO - Starting attempt 5 of 6
[2024-03-19T19:21:28.779+0000] {taskinstance.py:2214} INFO - Executing <Task(PostgresOperator): dim_mrr2stg> on 2024-03-19 19:00:24.301139+00:00
[2024-03-19T19:21:28.786+0000] {standard_task_runner.py:60} INFO - Started process 1213 to run task
[2024-03-19T19:21:28.790+0000] {standard_task_runner.py:87} INFO - Running: ['***', 'tasks', 'run', 'ETL_Flow', 'dim_mrr2stg', 'manual__2024-03-19T19:00:24.301139+00:00', '--job-id', '1982', '--raw', '--subdir', 'DAGS_FOLDER/etl2.py', '--cfg-path', '/tmp/tmpiiswgt3s']
[2024-03-19T19:21:28.793+0000] {standard_task_runner.py:88} INFO - Job 1982: Subtask dim_mrr2stg
[2024-03-19T19:21:28.849+0000] {task_command.py:423} INFO - Running <TaskInstance: ETL_Flow.dim_mrr2stg manual__2024-03-19T19:00:24.301139+00:00 [running]> on host 315dde19fa59
[2024-03-19T19:21:29.117+0000] {taskinstance.py:2510} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='coder2j' AIRFLOW_CTX_DAG_ID='ETL_Flow' AIRFLOW_CTX_TASK_ID='dim_mrr2stg' AIRFLOW_CTX_EXECUTION_DATE='2024-03-19T19:00:24.301139+00:00' AIRFLOW_CTX_TRY_NUMBER='5' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-03-19T19:00:24.301139+00:00'
[2024-03-19T19:21:29.119+0000] {sql.py:276} INFO - Executing: insert into STG_Dim_Products(Product_ID,Product_Name,Supplier,Category,Unit_Price,Unit_Cost)
select 
case when Product_ID similar to '[0-9]+' then cast(Product_ID as integer) else 0 end,
Product_Name,
case when Supplier similar to '[0-9]+' then cast(Supplier as integer) else 0 end,
case when Category similar to '[0-9]+' then cast(Category as integer) else 0 end,
case when Unit_Price similar to '[0-9]+(\.[0-9]+)?' and cast(Unit_Price as decimal(15,5))>=0
    then cast(Unit_Price as decimal(15,5)) else null end,
case when Unit_Cost similar to '[0-9]+(\.[0-9]+)?' and cast(Unit_Cost as decimal(15,5))>=0
    then cast(Unit_Cost as decimal(15,5)) else null end
from MRR_Dim_Products;

insert into STG_Dim_Customers(Customer_ID,Company_Name,Contact_Name,Street,City,Postal_Code,Country,Phone,Fax)
select
case when Customer_ID similar to '[0-9]+' then cast(Customer_ID as integer) else 0 end,
Company_Name,
Contact_Name,
Street,
City,
Postal_Code,
Country,
Phone,
Fax
from MRR_Dim_Customers;

insert into STG_Dim_Employees(Employee_ID,Last_Name,First_Name,Title,Hire_Date,Office,Reports_To,Month_Salary)
select 
case when Employee_ID similar to '[0-9]+' then cast(Employee_ID as int) else 0 end,
Last_Name,
First_Name,
Title,
case
    -- YYYY-MM-DD
    when Hire_Date ~ '^\d{4}-\d{2}-\d{2}$' then to_date(Hire_Date, 'YYYY-MM-DD')
    -- DD-MM-YYYY
    when Hire_Date ~ '^\d{2}-\d{2}-\d{4}$' then to_date(Hire_Date, 'DD-MM-YYYY')
    -- YYYY.MM.DD
    when Hire_Date ~ '^\d{4}.\d{2}.\d{2}$' then to_date(Hire_Date, 'YYYY.MM.DD')
    -- DD.MM.YYYY
    when Hire_Date ~ '^\d{2}.\d{2}.\d{4}$' then to_date(Hire_Date, 'DD.MM.YYYY')
    -- DD/MM/YYYY
    when Hire_Date ~ '^\d{2}/\d{2}/\d{4}$' then to_date(Hire_Date, 'DD/MM/YYYY')
    -- YYYY/MM/DD
    when Hire_Date ~ '^\d{4}/\d{2}/\d{2}$' then to_date(Hire_Date, 'YYYY/MM/DD')
    -- DD\MM\YYYY
    when Hire_Date ~ '^\d{2}\\d{2}\\d{4}$' then to_date(Hire_Date, 'DD\MM\YYYY')
    -- YYYY\MM\DD
    when Hire_Date ~ '^\d{4}\\d{2}\\d{2}$' then to_date(Hire_Date, 'YYYY\MM\DD')
    else null end,
case when Office similar to '[0-9]+' then cast(Office as int) else 0 end,
case when Reports_To similar to '[0-9]+' then cast(Reports_To as int) else 0 end,
case when Month_Salary is null then null else cast(Month_Salary as decimal(15,5)) end
from MRR_Dim_Employees;

insert into DWH_Dim_Dates(Date,Year,Quarter,Month,Day)
select
generate_series::date,
extract(year from generate_series),
extract(quarter from generate_series),
extract(month from generate_series),
extract(day from generate_series)
from generate_series('2018-01-01'::date, CURRENT_DATE::date, '1 day');


insert into STG_Dim_Time(DateTime, Date, Hour)
select
generate_series::timestamp,
date_trunc('hour', generate_series::timestamp),
time '00:00:00' + (generate_series::timestamp - date_trunc('hour', generate_series::timestamp))
from generate_series('2018-01-01'::timestamp, CURRENT_DATE::timestamp, '1 hour');

[2024-03-19T19:21:29.129+0000] {base.py:83} INFO - Using connection ID 'postgres_localhost' for task execution.
[2024-03-19T19:21:29.139+0000] {base.py:83} INFO - Using connection ID 'postgres_localhost' for task execution.
[2024-03-19T19:21:29.155+0000] {sql.py:457} INFO - Running statement: insert into STG_Dim_Products(Product_ID,Product_Name,Supplier,Category,Unit_Price,Unit_Cost)
select 
case when Product_ID similar to '[0-9]+' then cast(Product_ID as integer) else 0 end,
Product_Name,
case when Supplier similar to '[0-9]+' then cast(Supplier as integer) else 0 end,
case when Category similar to '[0-9]+' then cast(Category as integer) else 0 end,
case when Unit_Price similar to '[0-9]+(\.[0-9]+)?' and cast(Unit_Price as decimal(15,5))>=0
    then cast(Unit_Price as decimal(15,5)) else null end,
case when Unit_Cost similar to '[0-9]+(\.[0-9]+)?' and cast(Unit_Cost as decimal(15,5))>=0
    then cast(Unit_Cost as decimal(15,5)) else null end
from MRR_Dim_Products;

insert into STG_Dim_Customers(Customer_ID,Company_Name,Contact_Name,Street,City,Postal_Code,Country,Phone,Fax)
select
case when Customer_ID similar to '[0-9]+' then cast(Customer_ID as integer) else 0 end,
Company_Name,
Contact_Name,
Street,
City,
Postal_Code,
Country,
Phone,
Fax
from MRR_Dim_Customers;

insert into STG_Dim_Employees(Employee_ID,Last_Name,First_Name,Title,Hire_Date,Office,Reports_To,Month_Salary)
select 
case when Employee_ID similar to '[0-9]+' then cast(Employee_ID as int) else 0 end,
Last_Name,
First_Name,
Title,
case
    -- YYYY-MM-DD
    when Hire_Date ~ '^\d{4}-\d{2}-\d{2}$' then to_date(Hire_Date, 'YYYY-MM-DD')
    -- DD-MM-YYYY
    when Hire_Date ~ '^\d{2}-\d{2}-\d{4}$' then to_date(Hire_Date, 'DD-MM-YYYY')
    -- YYYY.MM.DD
    when Hire_Date ~ '^\d{4}.\d{2}.\d{2}$' then to_date(Hire_Date, 'YYYY.MM.DD')
    -- DD.MM.YYYY
    when Hire_Date ~ '^\d{2}.\d{2}.\d{4}$' then to_date(Hire_Date, 'DD.MM.YYYY')
    -- DD/MM/YYYY
    when Hire_Date ~ '^\d{2}/\d{2}/\d{4}$' then to_date(Hire_Date, 'DD/MM/YYYY')
    -- YYYY/MM/DD
    when Hire_Date ~ '^\d{4}/\d{2}/\d{2}$' then to_date(Hire_Date, 'YYYY/MM/DD')
    -- DD\MM\YYYY
    when Hire_Date ~ '^\d{2}\\d{2}\\d{4}$' then to_date(Hire_Date, 'DD\MM\YYYY')
    -- YYYY\MM\DD
    when Hire_Date ~ '^\d{4}\\d{2}\\d{2}$' then to_date(Hire_Date, 'YYYY\MM\DD')
    else null end,
case when Office similar to '[0-9]+' then cast(Office as int) else 0 end,
case when Reports_To similar to '[0-9]+' then cast(Reports_To as int) else 0 end,
case when Month_Salary is null then null else cast(Month_Salary as decimal(15,5)) end
from MRR_Dim_Employees;

insert into DWH_Dim_Dates(Date,Year,Quarter,Month,Day)
select
generate_series::date,
extract(year from generate_series),
extract(quarter from generate_series),
extract(month from generate_series),
extract(day from generate_series)
from generate_series('2018-01-01'::date, CURRENT_DATE::date, '1 day');


insert into STG_Dim_Time(DateTime, Date, Hour)
select
generate_series::timestamp,
date_trunc('hour', generate_series::timestamp),
time '00:00:00' + (generate_series::timestamp - date_trunc('hour', generate_series::timestamp))
from generate_series('2018-01-01'::timestamp, CURRENT_DATE::timestamp, '1 hour');
, parameters: None
[2024-03-19T19:21:29.164+0000] {taskinstance.py:2728} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/models/taskinstance.py", line 444, in _execute_task
    result = _execute_callable(context=context, **execute_callable_kwargs)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/models/taskinstance.py", line 414, in _execute_callable
    return execute_callable(context=context, **execute_callable_kwargs)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/common/sql/operators/sql.py", line 282, in execute
    output = hook.run(
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/common/sql/hooks/sql.py", line 404, in run
    self._run_command(cur, sql_statement, parameters)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/common/sql/hooks/sql.py", line 462, in _run_command
    cur.execute(sql_statement)
psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint "dwh_dim_dates_pkey"
DETAIL:  Key (date)=(2018-01-01) already exists.

[2024-03-19T19:21:29.179+0000] {taskinstance.py:1149} INFO - Marking task as UP_FOR_RETRY. dag_id=ETL_Flow, task_id=dim_mrr2stg, execution_date=20240319T190024, start_date=20240319T192128, end_date=20240319T192129
[2024-03-19T19:21:29.196+0000] {standard_task_runner.py:107} ERROR - Failed to execute job 1982 for task dim_mrr2stg (duplicate key value violates unique constraint "dwh_dim_dates_pkey"
DETAIL:  Key (date)=(2018-01-01) already exists.
; 1213)
[2024-03-19T19:21:29.244+0000] {local_task_job_runner.py:234} INFO - Task exited with return code 1
[2024-03-19T19:21:29.257+0000] {warnings.py:109} WARNING - /home/***/.local/lib/python3.8/site-packages/***/models/baseoperator.py:1201: AirflowProviderDeprecationWarning: Call to deprecated class PostgresOperator. (Please use `***.providers.common.sql.operators.sql.SQLExecuteQueryOperator`.Also, you can provide `hook_params={'schema': <database>}`.)
  result = cls.__new__(cls)

[2024-03-19T19:21:29.279+0000] {taskinstance.py:3309} INFO - 0 downstream tasks scheduled from follow-on schedule check
