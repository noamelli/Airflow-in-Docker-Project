[2024-04-29T10:20:16.737+0000] {taskinstance.py:1979} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: ETL_Flow.create_tables manual__2024-04-29T10:04:00.253945+00:00 [queued]>
[2024-04-29T10:20:16.782+0000] {taskinstance.py:1979} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: ETL_Flow.create_tables manual__2024-04-29T10:04:00.253945+00:00 [queued]>
[2024-04-29T10:20:16.784+0000] {taskinstance.py:2193} INFO - Starting attempt 2 of 7
[2024-04-29T10:20:17.557+0000] {taskinstance.py:2214} INFO - Executing <Task(PostgresOperator): create_tables> on 2024-04-29 10:04:00.253945+00:00
[2024-04-29T10:20:17.571+0000] {standard_task_runner.py:60} INFO - Started process 101 to run task
[2024-04-29T10:20:17.576+0000] {standard_task_runner.py:87} INFO - Running: ['***', 'tasks', 'run', 'ETL_Flow', 'create_tables', 'manual__2024-04-29T10:04:00.253945+00:00', '--job-id', '3080', '--raw', '--subdir', 'DAGS_FOLDER/ETL.py', '--cfg-path', '/tmp/tmp0zx4nea2']
[2024-04-29T10:20:17.581+0000] {standard_task_runner.py:88} INFO - Job 3080: Subtask create_tables
[2024-04-29T10:20:17.665+0000] {task_command.py:423} INFO - Running <TaskInstance: ETL_Flow.create_tables manual__2024-04-29T10:04:00.253945+00:00 [running]> on host 9100669c2df2
[2024-04-29T10:20:17.862+0000] {taskinstance.py:2510} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='coder2j' AIRFLOW_CTX_DAG_ID='ETL_Flow' AIRFLOW_CTX_TASK_ID='create_tables' AIRFLOW_CTX_EXECUTION_DATE='2024-04-29T10:04:00.253945+00:00' AIRFLOW_CTX_TRY_NUMBER='2' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-04-29T10:04:00.253945+00:00'
[2024-04-29T10:20:17.865+0000] {sql.py:276} INFO - Executing: --MRR
CREATE TABLE IF NOT EXISTS MRR_Dim_Customers(
Customer_ID             varchar(50) null,
country             varchar(50) null,
currency            varchar(50) null,
exchange_to_usd     varchar(50) null,
installation_date   varchar(50) null,
media_source        varchar(50) null,
isValid             varchar(50) not null
);


CREATE TABLE IF NOT EXISTS MRR_Dim_Products(
product_ID          varchar(50) null,
product_name        varchar(50) null,
supplier            varchar(50) null,
category            varchar(50) null,
unit_price          varchar(50) null,
unit_cost           varchar(50) null,
isValid             varchar(50) not null
);


CREATE TABLE IF NOT EXISTS  MRR_Fact_Details(
order_ID            varchar(50) null,
product_ID          varchar(50) null,
quantity            varchar(50) null
);

CREATE TABLE IF NOT EXISTS  MRR_Fact_Orders(
order_ID            varchar(50) null,
order_time          varchar(50) null,
customer_ID         varchar(50) null,
coupon_discount     varchar(50) null
);

CREATE TABLE IF NOT EXISTS MRR_Fact_Events(
event_ID	        varchar(50)	not null,
event_description	varchar(50)	not null,
event_time	        varchar(50)	not null,
customer_ID	        varchar(50)	not null
);

--STG

CREATE TABLE IF NOT EXISTS  STG_Dim_Customers(
Customer_ID	            int	    not null,
country	            varchar(50)	not null,
currency	        varchar(50)	not null,
exchange_to_usd	    decimal(3,2)not null,
installation_date	date	    not null,
media_source	    varchar(50)	not null,
isValid	            varchar(50)	not null
);

CREATE TABLE IF NOT EXISTS  STG_Dim_Dates(
date	date	not null,
year	Int	    not null,
quarter	int	    not null,
month	int	    not null,
day	    int	    not null
);

CREATE TABLE IF NOT EXISTS STG_Dim_Products(
product_ID	    int	not         null,
product_name	varchar(50)	    not null,
supplier	    int	            not null,
category	    int	            not null,
unit_price	    decimal(15,5)	null,
unit_cost	    decimal(15,5)	null,
isValid	        varchar(10)	    not null
);

CREATE TABLE IF NOT EXISTS STG_Dim_Time(
dateTime	timestamp	not null,
date	    date	    not null,
hour	    int	    not null
);


CREATE TABLE IF NOT EXISTS  STG_Fact_Details(
order_ID	int	not null,
product_ID	int	not null,
quantity	int	not null
);

CREATE TABLE IF NOT EXISTS  STG_Fact_Orders(
order_ID	    int	         not null,
order_time	    timestamp    not null,
customer_ID	    int	         not null,
coupon_discount	decimal(3,2) not null
);

CREATE TABLE IF NOT EXISTS STG_Fact_Events(
event_ID	        int	        not null,
event_description	varchar(50)	not null,
event_time	        timestamp	not null,
customer_ID	        int	        not null
);

---DWH 

CREATE TABLE IF NOT EXISTS DWH_Dim_Customers(
DW_customer_ID	    serial	    not null,
Customer_ID	        int	        not null,
country	            varchar(50)	not null,
currency	        varchar(50)	not null,
exchange_to_usd	    decimal(3,2) not null,
installation_date	date	    not null,
media_source	    varchar(50)	not null,
valid_from      	date default current_date null,
valid_until	        date	    null,
PRIMARY KEY (DW_customer_ID)
);


CREATE TABLE IF NOT EXISTS  DWH_Dim_Dates(
date	date	not null,
year	int	    not null,
quarter	int	    not null,
month	int	    not null,
day	    int	    not null,
PRIMARY KEY (date)
);


CREATE TABLE IF NOT EXISTS DWH_Dim_Products(
DW_product_ID	serial	    not null,
product_ID	    int	        not null,
product_name	varchar(50)	not null,
supplier	    int	        not null,
category	    int	        not null,
unit_price	    decimal(15,5)	null,
unit_cost	    decimal(15,5)	null,
valid_from 	    date default current_date null,
valid_until	    date	        null,
PRIMARY KEY (DW_product_ID)
);


CREATE TABLE IF NOT EXISTS DWH_Dim_Time(
dateTime	timestamp	not null,
date	    date	    not null,
hour	    int	        not null,
PRIMARY KEY (dateTime )
); 

--DWH Fact tables - using partitions 

--DWH_Fact_Product_In_Order
CREATE TABLE IF NOT EXISTS DWH_Fact_Product_In_Order(
order_ID                    int             not null,
DW_product_ID               int             not null,
DW_customer_ID              int             not null,
order_time                  timestamp       not null,
country                     varchar(50)     not null,
currency                    varchar(50)     not null,
exchange_to_USD             decimal(3,2)    not null,
installation_date           date            not null,
media_source                varchar(50)     not null,
supplier                    int             not null,
category                    int             not null,
quantity                    int             null,
total_price_before_discount decimal(15,5)   not null,
total_cost                  decimal(15,5)   not null,
incremental_discount        decimal(3,2)    not null,
total_price_after_discount  decimal(15,5)   not null,
PRIMARY KEY (Order_ID, DW_product_ID, order_time) 
)  
PARTITION BY RANGE (order_time);



CREATE TABLE IF NOT EXISTS DWH_Fact_Events(
event_ID	        int	        not null,
event_description	varchar(50)	not null,
event_time	        timestamp	not null,
DW_customer_ID	    int	        not null,
country	            varchar(50)	not null,
currency	        varchar(50)	not null,
exchange_to_USD	    decimal(3,2)not null,
installation_date	date	    not null,
media_source	    varchar(50)	not null,
PRIMARY KEY (event_ID,event_time)
)
PARTITION BY RANGE (event_time);


--Summary tables 

CREATE TABLE IF NOT EXISTS Daily_Customers_Transactions(
DW_customer_ID	        int	        not null,
date	                date	    not null,
country	                varchar(50)	not null,
media_source	        varchar(50)	not null,
installation_date       date        not null,
last_seen 	            date	    not null,
days_since_installation	int	    not null,
days_since_last_seen	int	    not null,
engagement_status	    varchar(50)	not null,
PRIMARY KEY (DW_customer_ID, date)
);


CREATE TABLE IF NOT EXISTS Daily_Purchase_Agg(
DW_customer_ID	    int	            not null,
order_date	        date 	        not null,
country	            varchar(50)	    not null,
supplier	        int	            not null,
category	        int	            not null,
media_source	    varchar(50)	    not null,
total_cost	        decimal(15,5)	not null,
total_purchase_USD	decimal(15,5)	not null,
PRIMARY KEY (DW_customer_ID, order_date,supplier,category)
);

CREATE TABLE IF NOT EXISTS Daily_Event_Agg(
event_description	varchar(50)	not null,
event_date	        date 	    not null,
country	            varchar(50)	not null,
media_source	    varchar(50)	not null,
count 	            int	        not null,
PRIMARY KEY (event_description, event_date,country,media_source)
);


CREATE TABLE IF NOT EXISTS Monthly_Product_Rank(
DW_product_ID	            serial	    not null,
first_day_of_month	        date 	    not null,
category	                int	        not null,
popularity_percent_rank 	int	        not null,
profitabilty_percent_rank	int	        not null,
PRIMARY KEY (DW_product_ID, first_day_of_month)
);

CREATE TABLE IF NOT EXISTS Monthly_Supplier_Rank(
category	                int	 not null,
first_day_of_month	        date not null,
supplier 	                int	 not null,
popularity_percent_rank 	int	 not null,
profitabilty_percent_rank	int	 not null,
PRIMARY KEY (category, first_day_of_month,supplier)
);

--backup

CREATE TABLE IF NOT EXISTS DWH_Dim_Customers_backup(
DW_customer_ID	    serial	    not null,
Customer_ID	            int	        not null,
country	            varchar(50)	not null,
currency	        varchar(50)	not null,
exchange_to_usd	    decimal(3,2) not null,
installation_date	date	    not null,
media_source	    varchar(50)	not null,
valid_from      	date	    null,
valid_until	        date	    null,
PRIMARY KEY (DW_customer_ID)
);


CREATE TABLE IF NOT EXISTS DWH_Dim_Products_backup(
DW_product_ID	serial	    not null,
product_ID	    int	        not null,
product_name	varchar(50)	not null,
supplier	    int	        not null,
category	    int	        not null,
unit_price	    decimal(15,5)	null,
unit_cost	    decimal(15,5)	null,
valid_from 	    date	        null,
valid_until	    date	        null,
PRIMARY KEY (DW_product_ID)
);



CREATE TABLE IF NOT EXISTS DWH_Fact_Product_In_Order_backup(
order_ID	            int	            not null,
DW_product_ID	        int	            not null,
DW_customer_ID	        int	            not null,
order_time	            timestamp	    not null,
country	                varchar(50)	    not null,
currency	            varchar(50)	    not null,
exchange_to_USD	        decimal(3,2)    not null,
installation_date	    date	        not null,
media_source	        varchar(50)	    not null,
supplier	            int	            not null,
category	            int	            not null,
quantity	            int	                null,
total_price_before_discount  decimal(15,5)  not null,
total_cost	            decimal(15,5)   not null,
incremental_discount    decimal(3,2)    not null,
total_price_after_discount	 decimal(15,5)	not null,
PRIMARY KEY (Order_ID, DW_product_ID)
);

CREATE TABLE IF NOT EXISTS DWH_Fact_Events_backup(
event_ID	        int	        not null,
event_description	varchar(50)	not null,
event_time	        timestamp	not null,
DW_customer_ID	    int	        not null,
country	            varchar(50)	not null,
currency	        varchar(50)	not null,
exchange_to_USD	    decimal(3,2)not null,
installation_date	date	    not null,
media_source	    varchar(50)	not null,
PRIMARY KEY (event_ID)
);

CREATE TABLE IF NOT EXISTS Daily_Customers_Transactions_backup(
DW_customer_ID	        int	        not null,
date	                date	    not null,
country	                varchar(50)	not null,
media_source	        varchar(50)	not null,
installation_date       date        not null,
last_seen 	            date	    not null,
days_since_installation	int	        not null,
days_since_last_seen	int	        not null,
engagement_status	    varchar(50) not null,
PRIMARY KEY (DW_customer_ID, date)
);

CREATE TABLE IF NOT EXISTS Daily_Purchase_Agg_backup(
DW_customer_ID	    int	            not null,
order_date	        date 	        not null,
country	            varchar(50)	    not null,
supplier	        int	            not null,
category	        int	            not null,
media_source	    varchar(50)	    not null,
total_cost	        decimal(15,5)	not null,
total_purchase_USD	decimal(15,5)	not null,
PRIMARY KEY (DW_customer_ID, order_date, supplier, category)
);

CREATE TABLE IF NOT EXISTS Daily_Event_Agg_backup(
event_description	varchar(50)	not null,
event_date	        date 	    not null,
country	            varchar(50)	not null,
media_source	    varchar(50)	not null,
count 	            int	        not null,
PRIMARY KEY (event_description, event_date,country,media_source)
);

CREATE TABLE IF NOT EXISTS Monthly_Product_Rank_backup(
DW_product_ID	            serial	    not null,
first_day_of_month	        date 	    not null,
category	                int	        not null,
popularity_percent_rank 	int	        not null,
profitabilty_percent_rank	int	        not null,
PRIMARY KEY (DW_product_ID, first_day_of_month)
);

CREATE TABLE IF NOT EXISTS Monthly_Supplier_Rank_backup(
category	                int	 not null,
first_day_of_month	        date not null,
supplier 	                int	 not null,
popularity_percent_rank 	int	 not null,
profitabilty_percent_rank	int	 not null,
PRIMARY KEY (category, first_day_of_month,supplier)
);
[2024-04-29T10:20:17.889+0000] {base.py:83} INFO - Using connection ID 'postgres_localhost' for task execution.
[2024-04-29T10:20:17.909+0000] {base.py:83} INFO - Using connection ID 'postgres_localhost' for task execution.
[2024-04-29T10:20:18.036+0000] {sql.py:457} INFO - Running statement: --MRR
CREATE TABLE IF NOT EXISTS MRR_Dim_Customers(
Customer_ID             varchar(50) null,
country             varchar(50) null,
currency            varchar(50) null,
exchange_to_usd     varchar(50) null,
installation_date   varchar(50) null,
media_source        varchar(50) null,
isValid             varchar(50) not null
);


CREATE TABLE IF NOT EXISTS MRR_Dim_Products(
product_ID          varchar(50) null,
product_name        varchar(50) null,
supplier            varchar(50) null,
category            varchar(50) null,
unit_price          varchar(50) null,
unit_cost           varchar(50) null,
isValid             varchar(50) not null
);


CREATE TABLE IF NOT EXISTS  MRR_Fact_Details(
order_ID            varchar(50) null,
product_ID          varchar(50) null,
quantity            varchar(50) null
);

CREATE TABLE IF NOT EXISTS  MRR_Fact_Orders(
order_ID            varchar(50) null,
order_time          varchar(50) null,
customer_ID         varchar(50) null,
coupon_discount     varchar(50) null
);

CREATE TABLE IF NOT EXISTS MRR_Fact_Events(
event_ID	        varchar(50)	not null,
event_description	varchar(50)	not null,
event_time	        varchar(50)	not null,
customer_ID	        varchar(50)	not null
);

--STG

CREATE TABLE IF NOT EXISTS  STG_Dim_Customers(
Customer_ID	            int	    not null,
country	            varchar(50)	not null,
currency	        varchar(50)	not null,
exchange_to_usd	    decimal(3,2)not null,
installation_date	date	    not null,
media_source	    varchar(50)	not null,
isValid	            varchar(50)	not null
);

CREATE TABLE IF NOT EXISTS  STG_Dim_Dates(
date	date	not null,
year	Int	    not null,
quarter	int	    not null,
month	int	    not null,
day	    int	    not null
);

CREATE TABLE IF NOT EXISTS STG_Dim_Products(
product_ID	    int	not         null,
product_name	varchar(50)	    not null,
supplier	    int	            not null,
category	    int	            not null,
unit_price	    decimal(15,5)	null,
unit_cost	    decimal(15,5)	null,
isValid	        varchar(10)	    not null
);

CREATE TABLE IF NOT EXISTS STG_Dim_Time(
dateTime	timestamp	not null,
date	    date	    not null,
hour	    int	    not null
);


CREATE TABLE IF NOT EXISTS  STG_Fact_Details(
order_ID	int	not null,
product_ID	int	not null,
quantity	int	not null
);

CREATE TABLE IF NOT EXISTS  STG_Fact_Orders(
order_ID	    int	         not null,
order_time	    timestamp    not null,
customer_ID	    int	         not null,
coupon_discount	decimal(3,2) not null
);

CREATE TABLE IF NOT EXISTS STG_Fact_Events(
event_ID	        int	        not null,
event_description	varchar(50)	not null,
event_time	        timestamp	not null,
customer_ID	        int	        not null
);

---DWH 

CREATE TABLE IF NOT EXISTS DWH_Dim_Customers(
DW_customer_ID	    serial	    not null,
Customer_ID	        int	        not null,
country	            varchar(50)	not null,
currency	        varchar(50)	not null,
exchange_to_usd	    decimal(3,2) not null,
installation_date	date	    not null,
media_source	    varchar(50)	not null,
valid_from      	date default current_date null,
valid_until	        date	    null,
PRIMARY KEY (DW_customer_ID)
);


CREATE TABLE IF NOT EXISTS  DWH_Dim_Dates(
date	date	not null,
year	int	    not null,
quarter	int	    not null,
month	int	    not null,
day	    int	    not null,
PRIMARY KEY (date)
);


CREATE TABLE IF NOT EXISTS DWH_Dim_Products(
DW_product_ID	serial	    not null,
product_ID	    int	        not null,
product_name	varchar(50)	not null,
supplier	    int	        not null,
category	    int	        not null,
unit_price	    decimal(15,5)	null,
unit_cost	    decimal(15,5)	null,
valid_from 	    date default current_date null,
valid_until	    date	        null,
PRIMARY KEY (DW_product_ID)
);


CREATE TABLE IF NOT EXISTS DWH_Dim_Time(
dateTime	timestamp	not null,
date	    date	    not null,
hour	    int	        not null,
PRIMARY KEY (dateTime )
); 

--DWH Fact tables - using partitions 

--DWH_Fact_Product_In_Order
CREATE TABLE IF NOT EXISTS DWH_Fact_Product_In_Order(
order_ID                    int             not null,
DW_product_ID               int             not null,
DW_customer_ID              int             not null,
order_time                  timestamp       not null,
country                     varchar(50)     not null,
currency                    varchar(50)     not null,
exchange_to_USD             decimal(3,2)    not null,
installation_date           date            not null,
media_source                varchar(50)     not null,
supplier                    int             not null,
category                    int             not null,
quantity                    int             null,
total_price_before_discount decimal(15,5)   not null,
total_cost                  decimal(15,5)   not null,
incremental_discount        decimal(3,2)    not null,
total_price_after_discount  decimal(15,5)   not null,
PRIMARY KEY (Order_ID, DW_product_ID, order_time) 
)  
PARTITION BY RANGE (order_time);



CREATE TABLE IF NOT EXISTS DWH_Fact_Events(
event_ID	        int	        not null,
event_description	varchar(50)	not null,
event_time	        timestamp	not null,
DW_customer_ID	    int	        not null,
country	            varchar(50)	not null,
currency	        varchar(50)	not null,
exchange_to_USD	    decimal(3,2)not null,
installation_date	date	    not null,
media_source	    varchar(50)	not null,
PRIMARY KEY (event_ID,event_time)
)
PARTITION BY RANGE (event_time);


--Summary tables 

CREATE TABLE IF NOT EXISTS Daily_Customers_Transactions(
DW_customer_ID	        int	        not null,
date	                date	    not null,
country	                varchar(50)	not null,
media_source	        varchar(50)	not null,
installation_date       date        not null,
last_seen 	            date	    not null,
days_since_installation	int	    not null,
days_since_last_seen	int	    not null,
engagement_status	    varchar(50)	not null,
PRIMARY KEY (DW_customer_ID, date)
);


CREATE TABLE IF NOT EXISTS Daily_Purchase_Agg(
DW_customer_ID	    int	            not null,
order_date	        date 	        not null,
country	            varchar(50)	    not null,
supplier	        int	            not null,
category	        int	            not null,
media_source	    varchar(50)	    not null,
total_cost	        decimal(15,5)	not null,
total_purchase_USD	decimal(15,5)	not null,
PRIMARY KEY (DW_customer_ID, order_date,supplier,category)
);

CREATE TABLE IF NOT EXISTS Daily_Event_Agg(
event_description	varchar(50)	not null,
event_date	        date 	    not null,
country	            varchar(50)	not null,
media_source	    varchar(50)	not null,
count 	            int	        not null,
PRIMARY KEY (event_description, event_date,country,media_source)
);


CREATE TABLE IF NOT EXISTS Monthly_Product_Rank(
DW_product_ID	            serial	    not null,
first_day_of_month	        date 	    not null,
category	                int	        not null,
popularity_percent_rank 	int	        not null,
profitabilty_percent_rank	int	        not null,
PRIMARY KEY (DW_product_ID, first_day_of_month)
);

CREATE TABLE IF NOT EXISTS Monthly_Supplier_Rank(
category	                int	 not null,
first_day_of_month	        date not null,
supplier 	                int	 not null,
popularity_percent_rank 	int	 not null,
profitabilty_percent_rank	int	 not null,
PRIMARY KEY (category, first_day_of_month,supplier)
);

--backup

CREATE TABLE IF NOT EXISTS DWH_Dim_Customers_backup(
DW_customer_ID	    serial	    not null,
Customer_ID	            int	        not null,
country	            varchar(50)	not null,
currency	        varchar(50)	not null,
exchange_to_usd	    decimal(3,2) not null,
installation_date	date	    not null,
media_source	    varchar(50)	not null,
valid_from      	date	    null,
valid_until	        date	    null,
PRIMARY KEY (DW_customer_ID)
);


CREATE TABLE IF NOT EXISTS DWH_Dim_Products_backup(
DW_product_ID	serial	    not null,
product_ID	    int	        not null,
product_name	varchar(50)	not null,
supplier	    int	        not null,
category	    int	        not null,
unit_price	    decimal(15,5)	null,
unit_cost	    decimal(15,5)	null,
valid_from 	    date	        null,
valid_until	    date	        null,
PRIMARY KEY (DW_product_ID)
);



CREATE TABLE IF NOT EXISTS DWH_Fact_Product_In_Order_backup(
order_ID	            int	            not null,
DW_product_ID	        int	            not null,
DW_customer_ID	        int	            not null,
order_time	            timestamp	    not null,
country	                varchar(50)	    not null,
currency	            varchar(50)	    not null,
exchange_to_USD	        decimal(3,2)    not null,
installation_date	    date	        not null,
media_source	        varchar(50)	    not null,
supplier	            int	            not null,
category	            int	            not null,
quantity	            int	                null,
total_price_before_discount  decimal(15,5)  not null,
total_cost	            decimal(15,5)   not null,
incremental_discount    decimal(3,2)    not null,
total_price_after_discount	 decimal(15,5)	not null,
PRIMARY KEY (Order_ID, DW_product_ID)
);

CREATE TABLE IF NOT EXISTS DWH_Fact_Events_backup(
event_ID	        int	        not null,
event_description	varchar(50)	not null,
event_time	        timestamp	not null,
DW_customer_ID	    int	        not null,
country	            varchar(50)	not null,
currency	        varchar(50)	not null,
exchange_to_USD	    decimal(3,2)not null,
installation_date	date	    not null,
media_source	    varchar(50)	not null,
PRIMARY KEY (event_ID)
);

CREATE TABLE IF NOT EXISTS Daily_Customers_Transactions_backup(
DW_customer_ID	        int	        not null,
date	                date	    not null,
country	                varchar(50)	not null,
media_source	        varchar(50)	not null,
installation_date       date        not null,
last_seen 	            date	    not null,
days_since_installation	int	        not null,
days_since_last_seen	int	        not null,
engagement_status	    varchar(50) not null,
PRIMARY KEY (DW_customer_ID, date)
);

CREATE TABLE IF NOT EXISTS Daily_Purchase_Agg_backup(
DW_customer_ID	    int	            not null,
order_date	        date 	        not null,
country	            varchar(50)	    not null,
supplier	        int	            not null,
category	        int	            not null,
media_source	    varchar(50)	    not null,
total_cost	        decimal(15,5)	not null,
total_purchase_USD	decimal(15,5)	not null,
PRIMARY KEY (DW_customer_ID, order_date, supplier, category)
);

CREATE TABLE IF NOT EXISTS Daily_Event_Agg_backup(
event_description	varchar(50)	not null,
event_date	        date 	    not null,
country	            varchar(50)	not null,
media_source	    varchar(50)	not null,
count 	            int	        not null,
PRIMARY KEY (event_description, event_date,country,media_source)
);

CREATE TABLE IF NOT EXISTS Monthly_Product_Rank_backup(
DW_product_ID	            serial	    not null,
first_day_of_month	        date 	    not null,
category	                int	        not null,
popularity_percent_rank 	int	        not null,
profitabilty_percent_rank	int	        not null,
PRIMARY KEY (DW_product_ID, first_day_of_month)
);

CREATE TABLE IF NOT EXISTS Monthly_Supplier_Rank_backup(
category	                int	 not null,
first_day_of_month	        date not null,
supplier 	                int	 not null,
popularity_percent_rank 	int	 not null,
profitabilty_percent_rank	int	 not null,
PRIMARY KEY (category, first_day_of_month,supplier)
);, parameters: None
[2024-04-29T10:20:18.077+0000] {warnings.py:109} WARNING - /home/***/.local/lib/python3.8/site-packages/***/providers/common/sql/hooks/sql.py:407: AirflowProviderDeprecationWarning: Call to deprecated method _make_common_data_structure. (The `_make_serializable` method is deprecated and support will be removed in a future version of the common.sql provider. Please update the DbApiHook's provider to a version based on common.sql >= 1.9.1.)
  result = self._make_common_data_structure(handler(cur))

[2024-04-29T10:20:18.113+0000] {taskinstance.py:1149} INFO - Marking task as SUCCESS. dag_id=ETL_Flow, task_id=create_tables, execution_date=20240429T100400, start_date=20240429T102016, end_date=20240429T102018
[2024-04-29T10:20:18.193+0000] {local_task_job_runner.py:234} INFO - Task exited with return code 0
[2024-04-29T10:20:18.226+0000] {warnings.py:109} WARNING - /home/***/.local/lib/python3.8/site-packages/***/models/baseoperator.py:1201: AirflowProviderDeprecationWarning: Call to deprecated class PostgresOperator. (Please use `***.providers.common.sql.operators.sql.SQLExecuteQueryOperator`.Also, you can provide `hook_params={'schema': <database>}`.)
  result = cls.__new__(cls)

[2024-04-29T10:20:18.257+0000] {taskinstance.py:3309} INFO - 1 downstream tasks scheduled from follow-on schedule check
