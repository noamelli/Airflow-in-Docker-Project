[2024-04-28T07:09:11.536+0000] {taskinstance.py:1979} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: ETL_Flow.truncate_mrr manual__2024-04-27T12:55:47.185632+00:00 [queued]>
[2024-04-28T07:09:11.572+0000] {taskinstance.py:1979} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: ETL_Flow.truncate_mrr manual__2024-04-27T12:55:47.185632+00:00 [queued]>
[2024-04-28T07:09:11.574+0000] {taskinstance.py:2193} INFO - Starting attempt 1 of 6
[2024-04-28T07:09:11.674+0000] {taskinstance.py:2214} INFO - Executing <Task(PostgresOperator): truncate_mrr> on 2024-04-27 12:55:47.185632+00:00
[2024-04-28T07:09:11.747+0000] {standard_task_runner.py:60} INFO - Started process 901 to run task
[2024-04-28T07:09:11.790+0000] {standard_task_runner.py:87} INFO - Running: ['***', 'tasks', 'run', 'ETL_Flow', 'truncate_mrr', 'manual__2024-04-27T12:55:47.185632+00:00', '--job-id', '2930', '--raw', '--subdir', 'DAGS_FOLDER/ETL.py', '--cfg-path', '/tmp/tmp4eh1w08w']
[2024-04-28T07:09:11.814+0000] {standard_task_runner.py:88} INFO - Job 2930: Subtask truncate_mrr
[2024-04-28T07:09:12.005+0000] {task_command.py:423} INFO - Running <TaskInstance: ETL_Flow.truncate_mrr manual__2024-04-27T12:55:47.185632+00:00 [running]> on host d838c4eb4dcc
[2024-04-28T07:09:15.686+0000] {taskinstance.py:2510} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='coder2j' AIRFLOW_CTX_DAG_ID='ETL_Flow' AIRFLOW_CTX_TASK_ID='truncate_mrr' AIRFLOW_CTX_EXECUTION_DATE='2024-04-27T12:55:47.185632+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-04-27T12:55:47.185632+00:00'
[2024-04-28T07:09:15.698+0000] {sql.py:276} INFO - Executing: TRUNCATE TABLE MRR_Dim_Customers;
TRUNCATE TABLE MRR_Dim_Products;
TRUNCATE TABLE MRR_Fact_Details;
TRUNCATE TABLE MRR_Fact_Orders;
TRUNCATE TABLE MRR_Fact_Events;


[2024-04-28T07:09:15.763+0000] {base.py:83} INFO - Using connection ID 'postgres_localhost' for task execution.
[2024-04-28T07:09:15.833+0000] {base.py:83} INFO - Using connection ID 'postgres_localhost' for task execution.
[2024-04-28T07:09:15.924+0000] {sql.py:457} INFO - Running statement: TRUNCATE TABLE MRR_Dim_Customers;
TRUNCATE TABLE MRR_Dim_Products;
TRUNCATE TABLE MRR_Fact_Details;
TRUNCATE TABLE MRR_Fact_Orders;
TRUNCATE TABLE MRR_Fact_Events;

, parameters: None
[2024-04-28T07:09:16.026+0000] {taskinstance.py:2728} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/models/taskinstance.py", line 444, in _execute_task
    result = _execute_callable(context=context, **execute_callable_kwargs)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/models/taskinstance.py", line 414, in _execute_callable
    return execute_callable(context=context, **execute_callable_kwargs)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/common/sql/operators/sql.py", line 282, in execute
    output = hook.run(
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/common/sql/hooks/sql.py", line 404, in run
    self._run_command(cur, sql_statement, parameters)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/common/sql/hooks/sql.py", line 462, in _run_command
    cur.execute(sql_statement)
psycopg2.errors.UndefinedTable: relation "mrr_fact_events" does not exist

[2024-04-28T07:09:16.161+0000] {taskinstance.py:1149} INFO - Marking task as UP_FOR_RETRY. dag_id=ETL_Flow, task_id=truncate_mrr, execution_date=20240427T125547, start_date=20240428T070911, end_date=20240428T070916
[2024-04-28T07:09:16.584+0000] {standard_task_runner.py:107} ERROR - Failed to execute job 2930 for task truncate_mrr (relation "mrr_fact_events" does not exist
; 901)
[2024-04-28T07:09:16.663+0000] {local_task_job_runner.py:234} INFO - Task exited with return code 1
[2024-04-28T07:09:16.800+0000] {warnings.py:109} WARNING - /home/***/.local/lib/python3.8/site-packages/***/models/baseoperator.py:1201: AirflowProviderDeprecationWarning: Call to deprecated class PostgresOperator. (Please use `***.providers.common.sql.operators.sql.SQLExecuteQueryOperator`.Also, you can provide `hook_params={'schema': <database>}`.)
  result = cls.__new__(cls)

[2024-04-28T07:09:17.034+0000] {taskinstance.py:3309} INFO - 0 downstream tasks scheduled from follow-on schedule check
